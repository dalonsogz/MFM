/*
 * MAME FILE MANAGER - MAME resources management tool
 * Copyright (c) 2011 - 2018.  Author phweda : phweda1@yahoo.com
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.09.19 at 10:16:00 AM EDT 
//


package com.github.phweda.mfm.mame;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the com.github.phweda.MFM.mame package.
 * <p>An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Description_QNAME = new QName("http://MFM.Phweda/MAME", "description");
    private final static QName _Manufacturer_QNAME = new QName("http://MFM.Phweda/MAME", "manufacturer");
    private final static QName _Year_QNAME = new QName("http://MFM.Phweda/MAME", "year");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.github.phweda.MFM.mame
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Extension }
     */
    public Extension createExtension() {
        return new Extension();
    }

    /**
     * Create an instance of {@link Instance }
     */
    public Instance createInstance() {
        return new Instance();
    }

    /**
     * Create an instance of {@link Configuration }
     */
    public Configuration createConfiguration() {
        return new Configuration();
    }

    /**
     * Create an instance of {@link Condition }
     */
    public Condition createCondition() {
        return new Condition();
    }

    /**
     * Create an instance of {@link Confsetting }
     */
    public Confsetting createConfsetting() {
        return new Confsetting();
    }

    /**
     * Create an instance of {@link Sound }
     */
    public Sound createSound() {
        return new Sound();
    }

    /**
     * Create an instance of {@link Slot }
     */
    public Slot createSlot() {
        return new Slot();
    }

    /**
     * Create an instance of {@link Slotoption }
     */
    public Slotoption createSlotoption() {
        return new Slotoption();
    }

    /**
     * Create an instance of {@link Ramoption }
     */
    public Ramoption createRamoption() {
        return new Ramoption();
    }

    /**
     * Create an instance of {@link Rom }
     */
    public Rom createRom() {
        return new Rom();
    }

    /**
     * Create an instance of {@link Mame }
     */
    public Mame createMame() {
        return new Mame();
    }

    /**
     * Create an instance of {@link Machine }
     */
    public Machine createMachine() {
        return new Machine();
    }

    /**
     * Create an instance of {@link Biosset }
     */
    public Biosset createBiosset() {
        return new Biosset();
    }

    /**
     * Create an instance of {@link Disk }
     */
    public Disk createDisk() {
        return new Disk();
    }

    /**
     * Create an instance of {@link DeviceRef }
     */
    public DeviceRef createDeviceRef() {
        return new DeviceRef();
    }

    /**
     * Create an instance of {@link Sample }
     */
    public Sample createSample() {
        return new Sample();
    }

    /**
     * Create an instance of {@link Chip }
     */
    public Chip createChip() {
        return new Chip();
    }

    /**
     * Create an instance of {@link Display }
     */
    public Display createDisplay() {
        return new Display();
    }

    /**
     * Create an instance of {@link Input }
     */
    public Input createInput() {
        return new Input();
    }

    /**
     * Create an instance of {@link Control }
     */
    public Control createControl() {
        return new Control();
    }

    /**
     * Create an instance of {@link Dipswitch }
     */
    public Dipswitch createDipswitch() {
        return new Dipswitch();
    }

    /**
     * Create an instance of {@link Dipvalue }
     */
    public Dipvalue createDipvalue() {
        return new Dipvalue();
    }

    /**
     * Create an instance of {@link Port }
     */
    public Port createPort() {
        return new Port();
    }

    /**
     * Create an instance of {@link Analog }
     */
    public Analog createAnalog() {
        return new Analog();
    }

    /**
     * Create an instance of {@link Adjuster }
     */
    public Adjuster createAdjuster() {
        return new Adjuster();
    }

    /**
     * Create an instance of {@link Driver }
     */
    public Driver createDriver() {
        return new Driver();
    }

    /**
     * Create an instance of {@link Device }
     */
    public Device createDevice() {
        return new Device();
    }

    /**
     * Create an instance of {@link Softwarelist }
     */
    public Softwarelist createSoftwarelist() {
        return new Softwarelist();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     */
    @XmlElementDecl(namespace = "http://MFM.Phweda/MAME", name = "description")
    public JAXBElement<String> createDescription(String value) {
        return new JAXBElement<String>(_Description_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     */
    @XmlElementDecl(namespace = "http://MFM.Phweda/MAME", name = "manufacturer")
    public JAXBElement<String> createManufacturer(String value) {
        return new JAXBElement<String>(_Manufacturer_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     */
    @XmlElementDecl(namespace = "http://MFM.Phweda/MAME", name = "year")
    public JAXBElement<String> createYear(String value) {
        return new JAXBElement<String>(_Year_QNAME, String.class, null, value);
    }

}
